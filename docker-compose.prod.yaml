#   port mappings
#
#   service         local -> host
#   ------------------------------
#   proxy           80 -> 8380

version: '3.3'
services:
  # Proxy
  proxy:
    build:
      context: ./proxy
    depends_on:
      - web
      - api
    links:
      - web
      - api
    ports:
      - '8380:80'
    restart: always
    stdin_open: true
    tty: true

  # Mongo
  mongo:
    image: mongo:5.0-focal
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    restart: always
    stdin_open: true
    tty: true

  # API
  api:
    depends_on:
      - mongo
    links:
      - mongo
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    environment:
      NODE_ENV: 'production'
      HOST: '0.0.0.0'
      PORT: 5000
      RATE_LIMIT_WINDOW_MS: 60000
      RATE_LIMIT_MAX: 100
      RUN_JOBS_STARTUP: 'true'
      MONGO_URI: 'mongodb://mongo:27017/bloomfi'
      JWT_SECRET: 'UJl5Y8nK7b7TNjz8'
      JWT_AUTH_EXPIRE_DAYS: '30d'
      JWT_ACTIVATION_EXPIRE_DAYS: '3d'
      JWT_COOKIE_EXPIRE_MS: 259200000
      LOGOUT_COOKIE_EXPIRE_MS: 10000
      RESET_PASSWORD_EXPIRE_MS: 600000
      ACCOUNT_ACTIVIATION_URL: 'https://kansa.cibr.qcri.org/activate'
      ACCOUNT_ACTIVIATION_EXPIRE_MS: 259200000
      SMTP_HOST: 'smtp.office365.com'
      SMTP_PORT: 587
      SMTP_EMAIL: 'noreply@mail.cibr.qcri.org'
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      FROM_EMAIL: 'noreply@mail.cibr.qcri.org'
      FROM_NAME: 'BloomFi'
    restart: always
    stdin_open: true
    tty: true
  
  # Web
  web:
    depends_on:
      - api
    build:
      context: ./web
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_AMPLITUDE_API_KEY=${AMPLITUDE_PROD_API_KEY}
    environment:
      NODE_ENV: 'production'
    restart: always
    stdin_open: true
    tty: true

  # Services
  analyze-sentiment:
    build:
      context: ./services/analyze-sentiment
      dockerfile: ./Dockerfile.prod
    volumes:
      - ./services/analyze-sentiment:/app
    restart: always
    stdin_open: true
    tty: true

  bootstrap:
    depends_on:
      - mongo
    links:
      - mongo
    build:
      context: ./services
      dockerfile: ./bootstrap/Dockerfile.prod
    volumes:
      - ./services:/app
    environment:
      NODE_ENV: 'production'
      MONGO_URI: 'mongodb://mongo:27017/bloomfi'
      API_URL: 'https://api.llama.fi/protocols'
      DELAY_MS: 86400000
    restart: always
    stdin_open: true
    tty: true

  collect-tweets:
    depends_on:
      - mongo
      - bootstrap
      - analyze-sentiment
    links:
      - mongo
      - analyze-sentiment
    build:
      context: ./services
      dockerfile: ./collect-tweets/Dockerfile.prod
    volumes:
      - ./services:/app
    environment:
      NODE_ENV: 'production'
      MONGO_URI: 'mongodb://mongo:27017/bloomfi'
      SENTIMENT_URI: 'http://analyze-sentiment:8000/analyze'
      STARTUP_DELAY_MS: 120000
      REQUEST_DELAY_MS: 6000
      INTERVAL_DELAY_MS: 60000
      TWEETS_PER_PROTOCOL: 300
      BEARER_KEY: ${TWITTER_BEARER_KEY}
      MAX_RESULTS: 100
    restart: always
    stdin_open: true
    tty: true

  collect-protocols:
    depends_on:
      - mongo
      - bootstrap
    links:
      - mongo
    build:
      context: ./services
      dockerfile: ./collect-protocols/Dockerfile.prod
    volumes:
      - ./services:/app
    environment:
      NODE_ENV: 'production'
      MONGO_URI: 'mongodb://mongo:27017/bloomfi'
      API_URL: 'https://rapidapi.com/coingecko/api/coingecko'
      REQUEST_DELAY_MS: 1000
      INTERVAL_DELAY_MS: 86400000
      STARTUP_DELAY_MS: 10000
    restart: always
    stdin_open: true
    tty: true

volumes:
  mongo-data:
  mongo-config:
